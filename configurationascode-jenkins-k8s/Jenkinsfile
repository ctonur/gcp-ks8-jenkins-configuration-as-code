pipeline {
    agent any
    environment {
        PRIVATE_REGISTRY = 'docker.io'
        REPO = 'ctonur/hello'
        PRIVATE_REPO = "${PRIVATE_REGISTRY}/${REPO}"
        DOCKER_PRIVATE = credentials('dockerhub')
        COMMIT = 'latest'
        TAG = 'latest'
    }
    stages {
        stage ('Checkout') {
            steps {
                sh 'git clone https://github.com/ctonur/gcp-ks8-jenkins-configuration-as-code.git'
            }
        }
        stage ('Docker build') {
                    steps {
                        sh "docker build -f ./gcp-ks8-jenkins-configuration-as-code/src/Dockerfile -t ${REPO}:${COMMIT} ./k8sConfigurationAsCode"
                    }
                    post {
                        success {
                            echo 'Tag for private registry'
                            sh "docker tag ${REPO}:${COMMIT} ${PRIVATE_REPO}:${TAG}"
                        }
                }
        }
        stage ('Run'){
            steps {
                // Create Network
                sh "docker network create app-${BUILD_NUMBER}"
                //Start application micro-services
                sh "docker run -d --name 'app-${BUILD_NUMBER}' --network app-${BUILD_NUMBER} ${REPO}:${COMMIT}"
                // Get container IDs
            
            }
        }
        stage ('Test And Push Image'){
            steps {
                sleep 60
                // Internal
                sh "docker exec app-${BUILD_NUMBER} /bin/bash -c 'curl -iL -X GET http://localhost:11130'"
            }
            post {
                always {
                    echo 'Remove Docker'
                    sh "docker rm -vf app-${BUILD_NUMBER}"
                }
                success {
                    sh "docker login -u ${DOCKER_PRIVATE_USR} -p Onur28051985 ${PRIVATE_REGISTRY}"
                    sh "docker push ${PRIVATE_REPO}:${TAG}"
                }
            }
        }       
        stage ('Apply k8s') {
            steps {
                sh 'kubectl apply -f ./gcp-ks8-jenkins-configuration-as-code/src/yaml/.'
            }
        }
        
    }
    post {
        success {
            echo 'Only run if the current Pipeline has a "success" status'

        }
        unstable {
            echo 'Only run if the current Pipeline has an "unstable" status, usually caused by test failures'
        }
        aborted {
            echo 'Only run if the current Pipeline has an "aborted" status'
        }
     }
}

